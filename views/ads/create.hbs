<div class='create-project-component container'>
    <div class='row d-flex flex-row justify-content-center'>
        <div class='col-10 mt-4 card p-4'>
            <form action='/ads/create' id='createForm' name='createForm' method='post'
                enctype='multipart/form-data'>
                <div>
                    <label>Titre</label>
                    <input id='title' class='form-control' type='text' placeholder='Titre' value='My title' />
                </div>
                <div>
                    <label>Prix</label>
                    <input id='price' class='form-control' type='text' placeholder='Prix' value='100' />
                </div>
                <div>
                    <label>Description</label>
                    <textarea id='description' class='form-control' placeholder='Description'>My description</textarea>
                </div>
                <div>
                    <label>Image(s)</label>
                    <input type='file' class='form-control' id='pictures' multiple />
                </div>
                <div class='d-flex flex-row justify-content-end'>
                    <button type='submit' class='btn btn-primary' id='create_submit-btn'>Create the ad</button>
                </div>
            </form>
        </div>
    </div>
</div>
<link rel='stylesheet' type='text/css' href='/css/ads/ads.css' />

<script>
    const validation = new window.JustValidate('#createForm',
        {
            focusInvalidField: true,
        },
        [{
            key: 'titleRequired',
            dict: {
                en: 'Ad title is required',
                fr: 'Le titre de l\'annonce est requis',
            }
        },
        {
            key: 'descriptionRequired',
            dict: {
                en: 'Ad description is required',
                fr: 'La description de l\'annonce est requise',
            }
        }]
    )
    validation.setCurrentLocale('fr')
    validation
        .addField('#title', [
            {
                rule: 'required',
                errorMessage: 'titleRequired',
            },
        ])
        .addField('#description', [
            {
                rule: 'required',
                errorMessage: 'descriptionRequired',
            },

        ])
        .onSuccess((event) => {
            event.preventDefault()
            submitCreate()
        }).onFail((fields) => {

        })
</script>

<script>
    const title = document.getElementById('title')
    const description = document.getElementById('description')
    const picturesInput = document.getElementById('pictures')

    async function submitCreate() {
        const formData = new FormData()

        formData.append('title', title.value)
        formData.append('description', description.value)

        for (const picture of picturesInput.files) {
            formData.append('pictures', picture)
        }

        const res = await fetch('/ads/create', {
            method: 'POST',
            body: formData,
        })
    }
</script>